pool:
  vmImage: 'ubuntu-latest'

# Temporarily disable the "main" analysis for changes in the dotnet subfolder.
# Will be removed as part of #2 later.
pr:
  branches:
    exclude:
    - branch-dotnet
    - rg/*
    - dp/*

trigger:
  branches:
    exclude:
    - branch-dotnet
    - rg/*
    - dp/*


variables:
  - group: sonarsource-build-variables

resources:
  repositories:
    - repository: commonTemplates
      type: git
      name: pipelines-yaml-templates
      ref:  refs/tags/v1.0.12


stages:
  - template: stage-with-burgr-notifications.yml@commonTemplates
    parameters:
      burgrName: 'build'
      burgrType: 'build'
      stageName: 'build'
      stageDisplayName: Build and stage to repox
      jobs:
        - job: build
          displayName: Build and stage to repox
          variables:
            MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
            MAVEN_OPTS: '-Xmx3072m -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
            commonMavenArguments: -B -Pdeploy-sonarsource -Dmaven.test.skip=true
            fixedBranch: $[replace(variables['Build.SourceBranch'], 'refs/heads/', '')]
          steps:
            - checkout: self
              fetchDepth: 1
            - task: Cache@2
              inputs:
                key: 'build | maven | "$(Agent.OS)" | **/pom.xml, !its/**'
                path: $(MAVEN_CACHE_FOLDER)
              displayName: Cache Maven local repo
            - task: DownloadSecureFile@1
              displayName: 'Download Maven settings'
              name: mavenSettings
              inputs:
                secureFile: 'maven-settings.xml'
            - template: update-maven-version-steps.yml
              parameters:
                mavenSettingsFilePath: $(mavenSettings.secureFilePath)
            - task: Maven@3
              displayName: 'Run Maven deploy and sign'
              condition: ne(variables['Build.Reason'], 'PullRequest')
              env:
                ARTIFACTORY_DEPLOY_USERNAME: $(ARTIFACTORY_DEPLOY_USERNAME)
                ARTIFACTORY_DEPLOY_PASSWORD: $(ARTIFACTORY_DEPLOY_PASSWORD)
                PGP_PASSPHRASE: $(PGP_PASSPHRASE)
                GIT_SHA1: $(Build.SourceVersion)
                GITHUB_BRANCH: $(fixedBranch)
              inputs:
                goals: 'deploy'
                options: >-
                  $(commonMavenArguments)
                  --settings $(mavenSettings.secureFilePath)
                  -Prelease,sign
                  -Dsign.keyFile=$(pgpSignKey.secureFilePath)
                publishJUnitResults: false
                javaHomeOption: 'JDKVersion'
                jdkVersionOption: '1.11'
                mavenOptions: $(MAVEN_OPTS)
            - task: Maven@3
              displayName: 'Run Maven deploy'
              condition: eq(variables['Build.Reason'], 'PullRequest')
              env:
                ARTIFACTORY_DEPLOY_USERNAME: $(ARTIFACTORY_DEPLOY_USERNAME)
                ARTIFACTORY_DEPLOY_PASSWORD: $(ARTIFACTORY_DEPLOY_PASSWORD)
              inputs:
                goals: 'deploy'
                options: >-
                  $(commonMavenArguments)
                  --settings $(mavenSettings.secureFilePath)
                publishJUnitResults: false
                javaHomeOption: 'JDKVersion'
                jdkVersionOption: '1.11'
                mavenOptions: $(MAVEN_OPTS)
            - bash: git checkout .
              name: revertPomChanges
              displayName: Revert changes made to pom.xml to not break cache feature
  - template: stage-with-burgr-notifications.yml@commonTemplates
    parameters:
      burgrName: 'validate'
      burgrType: 'validate'
      stageName: 'validate'
      stageDisplayName: Run UTs and trigger SonarQube analysis
      jobs:
        - job: test_windows
          displayName: Run unit tests on Windows
          pool:
            vmImage: 'windows-latest'
          variables:
            MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
            MAVEN_OPTS: '-Xmx3072m -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
          steps:
            - checkout: self
              fetchDepth: 1
            - task: Cache@2
              inputs:
                key: 'validate_win | maven | "$(Agent.OS)" | **/pom.xml, !its/**'
                path: $(MAVEN_CACHE_FOLDER)
              displayName: Cache Maven local repo
            - task: DownloadSecureFile@1
              displayName: 'Download Maven settings'
              name: mavenSettings
              inputs:
                secureFile: 'maven-settings.xml'
            - task: Maven@3
              displayName: 'Run Maven verify'
              env:
                ARTIFACTORY_PRIVATE_READER_USERNAME: $(ARTIFACTORY_PRIVATE_READER_USERNAME)
                ARTIFACTORY_PRIVATE_READER_PASSWORD: $(ARTIFACTORY_PRIVATE_READER_PASSWORD)
              inputs:
                goals: 'verify'
                options: '-B --settings $(mavenSettings.secureFilePath) -Dcommercial -Denable-repo=private'
                publishJUnitResults: true
                testResultsFiles: '**/surefire-reports/TEST-*.xml'
                testRunTitle: 'UTs on Windows'
                javaHomeOption: 'JDKVersion'
                jdkVersionOption: '1.11'
                mavenOptions: $(MAVEN_OPTS)
        - job: sonarqube
          displayName: SonarQube analysis on Next
          variables:
            MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
            MAVEN_OPTS: '-Xmx3072m -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
          steps:
            - task: Cache@2
              inputs:
                key: 'sq | maven | "$(Agent.OS)" | **/pom.xml, !its/**'
                path: $(MAVEN_CACHE_FOLDER)
              displayName: Cache Maven local repo
            - task: DownloadSecureFile@1
              displayName: 'Download Maven settings'
              name: mavenSettings
              inputs:
                secureFile: 'maven-settings.xml'
            - template: prepare-sq-analysis-steps.yml
            - task: Maven@3
              env:
                ARTIFACTORY_PRIVATE_READER_USERNAME: $(ARTIFACTORY_PRIVATE_READER_USERNAME)
                ARTIFACTORY_PRIVATE_READER_PASSWORD: $(ARTIFACTORY_PRIVATE_READER_PASSWORD)
              inputs:
                goals: 'verify'
                options: -B --settings $(mavenSettings.secureFilePath) -Pcoverage
                publishJUnitResults: false
                javaHomeOption: 'JDKVersion'
                jdkVersionOption: '1.11'
                mavenOptions: $(MAVEN_OPTS)
                sonarQubeRunAnalysis: true
                sqMavenPluginVersionChoice: 'latest'
  - template: stage-with-burgr-notifications.yml@commonTemplates
    parameters:
      burgrName: 'qa'
      burgrType: 'qa'
      stageName: 'qa'
      stageDisplayName: Run ITs
      stageDependencies: build
      jobs:
        - job: its
          displayName: Run ITs
          strategy:
            matrix:
             Linux:
               imageName: 'ubuntu-latest'
             Windows:
               imageName: 'windows-latest'
             MacOS:
               imageName: 'macOS-latest'
          variables:
            MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
            MAVEN_OPTS: '-Xmx3072m -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
          pool:
            vmImage: $(imageName)
          steps:
            - checkout: self
              fetchDepth: 1
            - task: Cache@2
              inputs:
                key: 'its | maven | "$(Agent.OS)" | **/pom.xml'
                path: $(MAVEN_CACHE_FOLDER)
              displayName: Cache Maven local repo
            - task: DownloadSecureFile@1
              displayName: 'Download Maven settings'
              name: mavenSettings
              inputs:
                secureFile: 'maven-settings.xml'
            - template: update-maven-version-steps.yml
              parameters:
                mavenSettingsFilePath: $(mavenSettings.secureFilePath)
            - task: UseDotNet@2
              inputs:
                version: '5.0.x'
            - task: Maven@3
              displayName: 'Run Maven ITs for SQ'
              env:
                ARTIFACTORY_QA_READER_USERNAME: $(ARTIFACTORY_QA_READER_USERNAME)
                ARTIFACTORY_QA_READER_PASSWORD: $(ARTIFACTORY_QA_READER_PASSWORD)
                # For Orchestrator
                ARTIFACTORY_API_KEY: $(ARTIFACTORY_API_KEY)
                GITHUB_TOKEN: $(GITHUB_TOKEN)
                # SonarLintInstaller
                MAVEN_LOCAL_REPOSITORY: $(MAVEN_CACHE_FOLDER)
              inputs:
                goals: 'verify'
                mavenPomFile: 'its/pom.xml'
                options: '-X -B --settings $(mavenSettings.secureFilePath) -Denable-repo=qa -DskipTests=false -Pdownload-staged-artifact'
                publishJUnitResults: true
                testResultsFiles: '**/surefire-reports/TEST-*.xml'
                testRunTitle: 'ITs $(imageName)'
                javaHomeOption: 'JDKVersion'
                jdkVersionOption: '1.11'
                mavenOptions: $(MAVEN_OPTS)
            - bash: git checkout .
              name: revertPomChanges
              displayName: Revert changes made to pom.xml to not break cache feature
  - template: promote-stage.yml@commonTemplates
    parameters:
      stageDependencies:
        - validate
        - qa