# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

# TODO - change triggers as part of #2
trigger:
- branch-dotnet

pr:
- branch-dotnet
- rg/*
- dp/*

pool:
  vmImage: ubuntu-latest

variables:
  - group: sonarsource-build-variables
  - name: buildConfiguration
    value: 'Release'
  - name: slnPath
    value: 'omnisharp-dotnet/SonarLint.OmniSharp.Plugin.sln'

steps:

- task: DownloadSecureFile@1
  displayName: 'Download snk file'
  name: snk
  inputs:
    secureFile: SonarSourceSecret.snk

- powershell: |
    # Reads the Sonar project version to use from the Java POM file

    # Calculate the POM file path
    $versionFilePath = "$env:BUILD_SOURCESDIRECTORY\omnisharp-plugin\pom.xml"
    Write-Host "Reading the Sonar project version from '${versionFilePath}' ..."

    # Read the version from the file
    [xml]$versionProps = Get-Content "$versionFilePath"
    $sonarProjectVersion = $versionProps.project.parent.version
    Write-Host "Sonar project version is '${sonarProjectVersion}'"

    # Set the variable to it can be used by other tasks
    Write-Host "##vso[task.setvariable variable=SONAR_PROJECT_VERSION;]$sonarProjectVersion"

- task: DotNetCoreCLI@2
  displayName: 'Restore NuGet packages'
  inputs:
    command: 'restore'
    projects: $(slnPath)
    restoreArguments: '--locked-mode'
    feedsToUse: 'select'
    vstsFeed: '399fb241-ecc7-4802-8697-dcdd01fbb832/423b576f-2263-43a1-93bd-69f4def19102'
    includeNuGetOrg: false


- task: SonarQubePrepare@4
  inputs:
    SonarQube: 'Next'
    scannerMode: 'MSBuild'
    projectKey: 'sonarlint-omnisharp-dotnet'
    projectName: 'sonarlint-omnisharp-dotnet'
    projectVersion: '$(SONAR_PROJECT_VERSION)'
# NOTE: we're using coverlet -> openxml format for code coverage so we can run on non-Windows agents
    extraProperties: |
      sonar.analysis.buildNumber=$(Build.BuildId)
      sonar.analysis.pipeline=$(Build.BuildId)
      sonar.analysis.sha1=$(System.PullRequest.SourceCommitId)
      sonar.analysis.prNumber=$(System.PullRequest.PullRequestNumber)
      sonar.analysis.repository=$(Build.Repository.ID)
      sonar.cs.opencover.reportsPaths="$(Build.SourcesDirectory)/**/TestResults/coverage.**.xml"
  
- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    command: 'build'
    projects: $(slnPath)
    configuration: $(buildConfiguration)
    arguments: '-p:SignAssembly=true -p:AssemblyOriginatorKeyFile="$(snk.secureFilePath)" $(additionalMSBuildProperties) '

# NOTE: specifying the "nobuild: true" input did not seem to work - the project was being rebuilt,
# overwriting the signed version with an unsigned version
- task: DotNetCoreCLI@2
  displayName: 'Run .NET unit tests'
  inputs:
    command: 'test'
    projects: $(slnPath)
    configuration: $(buildConfiguration)
    arguments: '-p:CollectCoverage=true -p:CoverletOutput=TestResults/ -p:CoverletOutputFormat=opencover --no-build --no-restore'
    testRunTitle: '.NET unit tests'

- task: PublishPipelineArtifact@1
  displayName: 'Publish the jar content files as a pipeline artifact'
  inputs:
    path: omnisharp-dotnet/JarContentFiles 
    artifact: DotNetJarContentFiles
      
- task: SonarQubeAnalyze@4
