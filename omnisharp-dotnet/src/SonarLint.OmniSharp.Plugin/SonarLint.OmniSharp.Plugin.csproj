<Project Sdk="Microsoft.NET.Sdk" InitialTargets="DownloadAndUnzipOmniSharp">
  
  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>

    <!-- We don't want to ship the OmniSharp assemblies -->
    <CopyOmniSharpToOutput>false</CopyOmniSharpToOutput>
  </PropertyGroup>

  <ItemGroup>
    <!-- We need to target the same Roslyn version as is used by OmniSharp.
         Referencing a different version of NewtonSoft.Json doesn't seem to cause a problem,
         but we're targeting the same version to be on the safe side.
    --> 
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="3.10.0" />
    <PackageReference Include="Newtonsoft.Json" Version="12.0.3" />
    
    <PackageReference Include="System.ComponentModel.Composition" Version="5.0.0" />
    <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="3.1.12" />
    <PackageReference Include="Microsoft.Extensions.Options" Version="3.1.12" />
  </ItemGroup>
  
  
  <!-- ********************************************** -->
  <!-- Packaging files to be included in the Java jar -->
  <!-- ********************************************** -->
    <!-- Add any files that should be included in the Java plugin to the item group @"FilesToIncludeInJar".
         The files will be copied to the directory "JarContentFiles". -->
  <ItemGroup>
    <FilesToIncludeInJar Include="$(TargetDir)$(TargetFileName)" />
  </ItemGroup>
  
  <Target Name="CopyFilesToJarContentFolder" AfterTargets="Build" Inputs="$(TargetDir)$(TargetFileName)" Outputs="$(JarContentFolder)$(TargetFileName)">

    <PropertyGroup>
      <JarContentFolder>$([System.IO.Path]::GetFullPath($(MSBuildThisFileDirectory)..\..\JarContentFiles\))</JarContentFolder>
    </PropertyGroup>

    <Message Importance="high" Text="Copying plugin files to $(JarContentFolder)" />
    <RemoveDir Directories="$(JarContentFolder)" />
    
    <Copy OverwriteReadOnlyFiles="true" SourceFiles="@(FilesToIncludeInJar)" DestinationFolder="$(JarContentFolder)" />
  </Target>

  <ItemGroup>
    <Compile Update="Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

</Project>
