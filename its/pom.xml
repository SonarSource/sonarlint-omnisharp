<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.sonarsource.sonarlint.omnisharp</groupId>
    <artifactId>sonarlint-omnisharp-parent</artifactId>
    <version>1.31-SNAPSHOT</version>
  </parent>

  <artifactId>sonarlint-omnisharp-its</artifactId>

  <name>SonarOmnisharp ITs</name>
  <description>Integration tests</description>

  <properties>
    <skipTests>true</skipTests>
    <maven.deploy.skip>true</maven.deploy.skip>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <version>3.0.2</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.sonarsource.sonarlint.core</groupId>
      <artifactId>sonarlint-java-client-utils</artifactId>
      <version>${sonarlint-core.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.sonarsource.sonarlint.core</groupId>
      <artifactId>sonarlint-rpc-protocol</artifactId>
      <version>${sonarlint-core.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.sonarsource.sonarlint.core</groupId>
      <artifactId>sonarlint-rpc-impl</artifactId>
      <version>${sonarlint-core.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.sonarsource.sonarlint.core</groupId>
      <artifactId>sonarlint-rpc-java-client</artifactId>
      <version>${sonarlint-core.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <release>11</release>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <!-- To fix https://newbedev.com/surefire-maven-plugin-corrupted-stdout-by-directly-writing-to-native-stream-in-forked-jvm -->
          <version>3.0.0-M7</version>
          <configuration>
            <!-- Activate the use of TCP to transmit events to the plugin -->
            <forkNode implementation="org.apache.maven.plugin.surefire.extensions.SurefireForkNodeFactory" />
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.6.1</version>
        <executions>
          <execution>
            <id>download-omnisharp-windows</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                 <artifactItem>
                   <groupId>org.sonarsource.sonarlint.omnisharp</groupId>
                   <artifactId>omnisharp-roslyn</artifactId>
                   <version>${omnisharp.version}</version>
                   <classifier>net472</classifier>
                   <type>zip</type>
                   <overWrite>true</overWrite>
                   <outputDirectory>${project.build.directory}/omnisharp-win</outputDirectory>
                 </artifactItem>
               </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>download-omnisharp-mono</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                 <artifactItem>
                   <groupId>org.sonarsource.sonarlint.omnisharp</groupId>
                   <artifactId>omnisharp-roslyn</artifactId>
                   <version>${omnisharp.version}</version>
                   <classifier>mono</classifier>
                   <type>zip</type>
                   <overWrite>true</overWrite>
                   <outputDirectory>${project.build.directory}/omnisharp-mono</outputDirectory>
                 </artifactItem>
               </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>download-omnisharp-net6</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                 <artifactItem>
                   <groupId>org.sonarsource.sonarlint.omnisharp</groupId>
                   <artifactId>omnisharp-roslyn</artifactId>
                   <version>${omnisharp.version}</version>
                   <classifier>net6</classifier>
                   <type>zip</type>
                   <overWrite>true</overWrite>
                   <outputDirectory>${project.build.directory}/omnisharp-net6</outputDirectory>
                 </artifactItem>
               </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>download-analyzer-for-its</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.sonarsource.dotnet</groupId>
                  <artifactId>sonar-csharp-plugin</artifactId>
                  <version>${analyzer.version}</version>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/analyzer</outputDirectory>
                  <!-- Use a static file name to simplify access from tests -->
                  <destFileName>sonarcsharp.jar</destFileName>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>download-staged-artifact</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>fetch-artifact-under-test</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>copy</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>sonarlint-omnisharp-plugin</artifactId>
                  <version>${project.version}</version>
                  <type>jar</type>
                  <overWrite>false</overWrite>
                  <outputDirectory>../omnisharp-plugin/target</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
